********** Entornos de desarrollo ***********

Creamos en la raiz del proyecto .env y lo agregamos al .gitignore

  Definamos algunas variables de entorno 
    SERVER_PORT=4000
    DB_HOST_DEV = "mongodb://localhost"
    DB_PORT_DEV = 27017
    DB_USER = ""
    DB_PASSWORD = ""

  Ahora las utilizamos en index y en database.js
    import dotenv from "dotenv";

    // console.log(dotenv.config());

    const result = dotenv.config();
    const { SERVER_PORT } = result.parsed;

    app.listen(SERVER_PORT); //server run on port 3002
    connect(); //conexiÃ³n database

    console.log(`>>>> Server run on port ${SERVER_PORT} ðŸ–¥`);

  database.js
    import dotenv from "dotenv";

    const result = dotenv.config();
    const { DB_HOST_DEV, DB_PORT_DEV } = result.parsed;

    export async function connect() {
      await mongoose
        .connect(`${DB_HOST_DEV}:${DB_PORT_DEV}/apiRestProducts`, {
          useNewUrlParser: true,
          useUnifiedTopology: true,
          useFindAndModify: true,
          useCreateIndex: true,
        })
        .then((db) =>
          console.log(
            `>>>> Database is connected on ${DB_HOST_DEV}:${DB_PORT_DEV} ðŸ—‚`
          )
        )
        .catch((err) => console.log(">>> Error: ", err));
    }

  Ahora el package.json 
    "scripts": {
      "dev": "NODE_ENV=dev nodemon src/server/index.js --exec babel-node",
      "build": "babel src --out-dir dist",
      "start": "NODE_ENV=prod node dist/server/index.js"
    }

Con esto tenemos definidos los entornos de produccion y desarrollo. 


Al hacer el buil de la app no da un error. Solucion: importar polyfill
https://medium.com/@afdiaz_/referenceerror-regeneratorruntime-is-not-defined-eeb6c17f4bdb
https://babeljs.io/docs/en/babel-polyfill/

Por ultimo definamos que DB utilizar en cada entorno de desarrollo: 
  database.js

  /*
    ConecciÃ³n al cliente del motor de la BD 
  */
  import mongoose from "mongoose";
  import dotenv from "dotenv";

  const { NODE_ENV } = process.env;
  const result = dotenv.config();
  const { DB_HOST, DB_PORT, DB_DATABASE, DB_DATABASE_TEST } = result.parsed;

  let environment = `${DB_HOST}:${DB_PORT}/${DB_DATABASE}`;

  if (NODE_ENV === "prod") {
    environment = `${DB_HOST}:${DB_PORT}/${DB_DATABASE}`;
  }

  if (NODE_ENV === "test") {
    environment = `${DB_HOST}:${DB_PORT}/${DB_DATABASE_TEST}`;
  }

  export async function connect() {
    await mongoose
      .connect(`${environment}`, {
        useNewUrlParser: true,
        useUnifiedTopology: true,
        useFindAndModify: true,
        useCreateIndex: true,
      })
      .then((db) => console.log(`>>>> Database is connected on ${environment} ðŸ—‚`))
      .catch((err) => console.log(">>> Error: ", err));
  }




